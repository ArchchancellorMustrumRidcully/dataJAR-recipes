<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads and imports into Munki the latest version of the 1Password Command Line Interface tool.

Based on https://github.com/autopkg/apettinen-recipes/blob/master/1Password_CLI/1Password_CLI.munki.recipe

1Password CLI will install to /usr/local/bin and preservers the op.sig signature for later verification via gpg or keybase.</string>
    <key>Identifier</key>
    <string>com.github.dataJAR-recipes.munki.1Password CLI</string>
    <key>Input</key>
    <dict>
        <key>DISPLAY_NAME</key>
        <string>1Password Command Line Interface</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/%NAME%</string>
        <key>MUNKI_CATEGORY</key>
        <string>Utilities</string>
        <key>MUNKI_DEVELOPER</key>
        <string>Agilebits</string>
        <key>MUNKI_NAME</key>
        <string>1PasswordCLI</string>
        <key>REQUIRES</key>
        <string>1Password</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>category</key>
            <string>%MUNKI_CATEGORY%</string>
            <key>description</key>
            <string>Bring the power of 1Password to the command line. Eliminate plaintext secrets in code, automate administrative tasks, and sign into any CLI with your fingerprint.</string>
            <key>developer</key>
            <string>%MUNKI_DEVELOPER%</string>
            <key>display_name</key>
            <string>%DISPLAY_NAME%</string>
            <key>name</key>
            <string>%MUNKI_NAME%</string>
            <key>requires</key>
            <array>
                <string>%REQUIRES%</string>
            </array>
            <key>unattended_install</key>
            <true/>
            <key>unattended_uninstall</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>1.1</string>
    <key>ParentRecipe</key>
    <string>com.github.apettinen.download.1Password_CLI</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>flat_pkg_path</key>
                <string>%pathname%</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PkgPayloadUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/usr/local/bin</string>
                <key>pkg_payload_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack/op.pkg/Payload</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>OnePasswordCLIVersioner</string>
            <key>Arguments</key>
            <dict>
                <key>binary_path</key>
                <string>%RECIPE_CACHE_DIR%/usr/local/bin/op</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>installcheck_script</key>
                    <string>#!/usr/local/munki/munki-python
# pylint: disable = invalid-name

'''
Copyright (c) 2025, dataJAR Ltd.  All rights reserved.
     Redistribution and use in source and binary forms, with or without
     modification, are permitted provided that the following conditions are met:
             * Redistributions of source code must retain the above copyright
               notice, this list of conditions and the following disclaimer.
             * Redistributions in binary form must reproduce the above copyright
               notice, this list of conditions and the following disclaimer in the
               documentation and/or other materials provided with the distribution.
             * Neither data JAR Ltd nor the names of its contributors may be used to
               endorse or promote products derived from this software without specific
               prior written permission.
     THIS SOFTWARE IS PROVIDED BY DATA JAR LTD 'AS IS' AND ANY
     EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     DISCLAIMED. IN NO EVENT SHALL DATA JAR LTD BE LIABLE FOR ANY
     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

SUPPORT FOR THIS PROGRAM
    This program is distributed 'as is' by DATA JAR LTD.
    For more information or support, please utilise the following resources:
            http://www.datajar.co.uk

DESCRIPTION
    Returns the version from the 1Password CLI binary and compares it with
    the version to be installed via Munki.
'''

from pkg_resources import parse_version as LooseVersion
import os
import subprocess
import sys


def main():
    '''
    Returns the version from the 1Password CLI binary

    Exit 1 if 1Password CLI is installed and newer than what we have in Munki.
    Exit 0 if 1Password CLI should be installed/upgraded.
    '''

    binary_path = '/usr/local/bin/op'
    munki_version = '2.30.3'
    binary_version = None

    # If binary exists
    if os.path.isfile(binary_path):
        # Get binary version, raise if we error
        try:
            process_output = subprocess.check_output([binary_path, '--version'])
            binary_version = process_output.strip().decode('utf-8')
            print("Current installed version: {}".format(binary_version))
            print("Munki version to install: {}".format(munki_version))
        except subprocess.CalledProcessError:
            print("Encountered an error when ascertaining 1Password CLI version, "
                  "proceeding with install...")
            sys.exit(0)
        except Exception as error:
            print("Error processing version output: {}, proceeding with install..."
                  .format(error))
            sys.exit(0)
    # If binary is missing
    else:
        print("Cannot find {}, proceeding with install...".format(binary_path))
        sys.exit(0)

    # Check binary_version against munki_version
    if LooseVersion(binary_version) &lt; LooseVersion(munki_version):
        print("Older version of 1Password CLI ({} &lt; {}), proceeding with install..."
              .format(binary_version, munki_version))
        sys.exit(0)
    print("Version of 1Password CLI same or newer than the munki version "
          "({} &gt;= {}), skipping...".format(binary_version, munki_version))
    sys.exit(1)


if __name__ == '__main__':
    main()</string>
                    <key>version</key>
                    <string>%version%</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>faux_root</key>
                <string>%RECIPE_CACHE_DIR%</string>
                <key>installs_item_paths</key>
                <array>
                    <string>/usr/local/bin/op</string>
                </array>
            </dict>
            <key>Processor</key>
            <string>MunkiInstallsItemsCreator</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>path_list</key>
                <array>
                    <string>%RECIPE_CACHE_DIR%/unpack</string>
                    <string>%RECIPE_CACHE_DIR%/usr</string>
                </array>
            </dict>
            <key>Processor</key>
            <string>PathDeleter</string>
        </dict>
    </array>
</dict>
</plist>
