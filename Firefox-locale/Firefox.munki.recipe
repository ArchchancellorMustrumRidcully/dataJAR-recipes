<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads locale specific Firefox and imports into Munki.

Set the 'LOCALE' variable to the required language version.

List of available locale codes here: https://ftp.mozilla.org/pub/firefox/releases/110.0.1/mac/ or here https://ftp.mozilla.org/pub/firefox/releases/latest/README.txt</string>
    <key>Identifier</key>
    <string>com.github.dataJAR-recipes.Firefox-locale</string>
    <key>Input</key>
    <dict>
        <key>LOCALE</key>
        <string>en-GB</string>
        <key>FORCE_MUNKIIMPORT</key>
        <string>YES!</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/firefox</string>
        <key>NAME</key>
        <string>Firefox_%LOCALE%</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>description</key>
            <string>Mozilla Firefox is a free and open source web browser.</string>
            <key>display_name</key>
            <string>Mozilla Firefox</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>developer</key>
            <string>Mozilla</string>
            <key>unattended_install</key>
            <true/>
            <key>unattended_uninstall</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>2.0</string>
    <key>ParentRecipe</key>
    <string>com.github.autopkg.download.firefox-rc-en_US</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>com.github.dataJAR-recipes.Shared Processors/FirefoxGetLocaleAndVersion</string>
            <key>Arguments</key>
            <dict>
                <key>choosen_locale</key>
                <string>%LOCALE%</string>
                <key>dmg_path</key>
                <string>%pathname%</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>version</key>
                    <string>%app_version%</string>
                    <key>installcheck_script</key>
                    <string>#!/usr/local/munki/munki-python
# pylint: disable = invalid-name

'''
Copyright (c) 2023, dataJAR Ltd.  All rights reserved.
     Redistribution and use in source and binary forms, with or without
     modification, are permitted provided that the following conditions are met:
             * Redistributions of source code must retain the above copyright
               notice, this list of conditions and the following disclaimer.
             * Redistributions in binary form must reproduce the above copyright
               notice, this list of conditions and the following disclaimer in the
               documentation and/or other materials provided with the distribution.
             * Neither data JAR Ltd nor the names of its contributors may be used to
               endorse or promote products derived from this software without specific
               prior written permission.
     THIS SOFTWARE IS PROVIDED BY DATA JAR LTD 'AS IS' AND ANY
     EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     DISCLAIMED. IN NO EVENT SHALL DATA JAR LTD BE LIABLE FOR ANY
     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
SUPPORT FOR THIS PROGRAM
    This program is distributed 'as is' by DATA JAR LTD.
    For more information or support, please utilise the following resources:
            http://www.datajar.co.uk

DESCRIPTION

See docstring in main()

'''
'''
Uses unzip command to extract locale information from omni.ja file.
https://bugzilla.mozilla.org/show_bug.cgi?id=1936505
'''

# Standard imports
import os
import plistlib
import sys
import subprocess
sys.path.insert(0, '/usr/local/munki')
from munkilib.pkgutils import MunkiLooseVersion as LooseVersion


def get_firefox_locale(firefox_path):
    '''Extract locale from omni.ja file'''
    omni_path = os.path.join(firefox_path, 'Contents/Resources/omni.ja')
    if not os.path.exists(omni_path):
        print(f"Cannot find {omni_path}")
        return None

    try:
        cmd = ['unzip', '-p', omni_path, 'default.locale']
        with open(os.devnull, 'w') as devnull:
            proc = subprocess.Popen(
                cmd,
                stdout=subprocess.PIPE,
                stderr=devnull,
                text=True
            )
        stdout, _ = proc.communicate()
        locale = stdout.strip()

        if not locale:
            print("Empty locale returned from omni.ja")
            return None

        return locale

    except subprocess.SubprocessError as err:
        print(f"Error running unzip command: {err}")
        return None


def main():
    '''Checks Firefox locale and version. Exits 0 to install if Firefox is not installed,
    locale cannot be determined, or version is older with matching locale. Exits 1 to
    cancel if locales don't match or version is same/newer with matching locale.'''

    # Var declaration
    firefox_path = '/Applications/Firefox.app'
    firefox_info_plist = os.path.join(firefox_path, 'Contents/Info.plist')
    firefox_locale = '%app_locale%'
    firefox_version = '%app_version%'

    # If Firefox.app is not installed, proceed with installation
    if not os.path.exists(firefox_path):
        print(f"{firefox_path} not installed, proceeding with installation...")
        sys.exit(0)

    # Get installed Firefox locale
    installed_locale = get_firefox_locale(firefox_path)
    if installed_locale is None:
        print("Could not determine installed Firefox locale, proceeding with installation...")
        sys.exit(0)

    print(f"Installed locale: {installed_locale}")
    print(f"Package locale: {firefox_locale}")

    # If locales don't match, cancel installation
    if installed_locale != firefox_locale:
        print(f"Installed locale ({installed_locale}) differs from package locale ({firefox_locale})")
        print("Cancelling installation...")
        sys.exit(1)

    # Locales match, check version
    if os.path.exists(firefox_info_plist):
        try:
            with open(firefox_info_plist, "rb") as plist_file:
                parsed_plist = plistlib.load(plist_file)
            installed_version = parsed_plist['CFBundleShortVersionString']
            print(f"Installed version: {installed_version}")
            print(f"Package version: {firefox_version}")

            if LooseVersion(installed_version) &lt; LooseVersion(firefox_version):
                print("Installed version is older, proceeding with installation...")
                sys.exit(0)
            else:
                print("Installed version is same or newer, cancelling installation...")
                sys.exit(1)
        except Exception as err:
            print(f"Error reading version info: {err}")
            sys.exit(0)
    else:
        print(f"Cannot find {firefox_info_plist}, proceeding with installation...")
        sys.exit(0)


if __name__ == '__main__':
    main()</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
                <key>force_munkiimport</key>
                <string>%FORCE_MUNKIIMPORT%</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
